<!DOCTYPE HTML>
<html>
  <head>
    <% include ../include/commonHead %>
      <style>
        <% let use3d = repeat == undefined %>
        <% if (use3d) { %>
          body, html { margin: 0; overflow: hidden; overflow-y:hidden}
          canvas { width:100%; height:100% }
        <% } %>
      </style>
  </head>
    <body>
    
      <% if (use3d) { %>
        <script src="/js/three.min.js"></script>
        <script src="/js/orbit.js"></script>
        <script src="/js/stats.min.js"></script>
      <% } %>
      
      <script src="/js/seedrandom.min.js"></script>
      <script src="/js/mybus.js"></script>
      <script src="/src/10-Optionen.js"></script>
      <% if (devMode) { %>
        <script src="/src/12-DeveloperMode.js"></script>
      <% } %>
      
      <% if (!isNaN(level)) { %>
        <script>
          AntIT._optionen.Levelmodus = true
          AntIT._optionen.Level = <%=level%>
        </script>
      <% } %>
      
      <% if (harmony) { %>
        <script>
          AntIT._optionen.Harmonie = true
        </script>
      <% } %>
          
      <% include ../include/simRessources %>
      <script src="/src/View/00-View.js"></script>
      <script src="/src/View/10-Pulse.js"></script>
      <script src="/src/View/12-UI.js"></script>
          
      <% if (use3d) { %>
        <script src="/src/View/20-View3d.js"></script>
        <script src="/src/View/99-Seal.js"></script>
      <% } else { %>
        <script>
          var View = AntIT._view
          View.Pulse.getBus().on('start', function(){
            View.Pulse.Init()
            View.Pulse.setFps(undefined)
            function tick(){
              for (var i = 0; i < 300; i++) {
                if (!View.Pulse.Tick())
                  return
              }
              setTimeout(tick, 0)
            }
            tick()
          })
        </script>
      <% } %>
      
      <script>
          document.getElementById("site-title").innerHTML += " - " + "<%=title%>"
      </script>
      
      <% if (use3d) { %>
        <div style="position: absolute; z-index: 1; left: 50px; bottom: 40px; width:400px; height:40px;font-size:1em;color:white;">
          <p>Maus: Links - drehen / Rechts - ziehen<br />Touch: Wischen - ziehen / lang tippen - drehen</p>
        </div>

        <div style="position: absolute; z-index: 3; right: 20px; top: 10px;font-size:1em;color:white;background-color:rgba(255,255,255,0.5);">
          <a href="<%=prefix%>" class="btn btn-primary">zur체ck</a>
        </div>
        <script>

          function hide(){
            document.getElementById("hud").style.height = "25px";
            document.getElementById("collapse").innerHTML = '<a href="javascript:show()">[+]</a>';
          }
          function show(){
            document.getElementById("hud").style.height = "";
            document.getElementById("collapse").innerHTML = '<a href="javascript:hide()">[--]</a>';
          }
        </script>

        <div id="hud" style="position: absolute; z-index: 2; left: 50px; top: 50px;padding:4px;font-size:1em;font-family:arial;background-color:rgba(255,255,255,<%=fightMode?0.8:0.5%>);overflow:hidden"></div>
        <div id="collapse" style="position: absolute; z-index: 2; left: 20px; top: 50px;padding:4px;font-size:1em;font-family:arial;background-color:rgba(255,255,255,0.5);">
          <a href="javascript:hide()">[--]</a>
        </div>

        <div id="loading" style="position: absolute; z-index: 5;top: 100px;font-size:2em;color:white;">
          <span class="label label-default" id="intro-text">Simulationsfehler!</span>
        </div>
      <% } else { %>
        <div class="container">
          <br><br>
          <h1>Headless AntIT! Simulator</h1>
          <div id="loading" style="font-size:2em;color:white;">
            <span class="label label-default" id="intro-text">Simulationsfehler!</span>
          </div>
          <div style="position: absolute; z-index: 3; right: 50px; top: 50px;font-size:1em;color:white;background-color:rgba(255,255,255,0.5);">
            <a href="/wettbewerb" class="btn btn-primary">zur체ck</a>
          </div>
          <br>
          
          <% for (var i = 1; i <= repeat; i++) { %>
            <div id="hud<%=i%>"></div>
          <% } %>
          <br>
          <div id="batchstat"></div><br>
          <div id="stats"></div>
          <br><br><br>
        </div>
      <% } %>
      
      
      
      <script>
        "use strict";
        <%
        function btoa(str) {
          var buffer
          if (str instanceof Buffer) {
            buffer = str;
          } else {
            buffer = new Buffer(str.toString(), 'binary');
          }
          return buffer.toString('base64');
        }

        var atLeastOnFile = false;
        if (code) { %>
          function injectCode() {
          <% code.forEach(function(c){
            atLeastOnFile = true;
            if (devMode) { %>
              (function(){
                <%-c.code%>
              })();
            <% } else { %>
              <% var exportCode = btoa('(function(){' + c.code + '}).call(42);') %>
              var whitelist = ['AntIT', 'Gehe', 'Drehe', 'DreheZuRichtung', 'GeheZuBau', 'NimmZucker', 'LadeZuckerAb', 'TrageApfel', 'GeheZuZiel', 'Warte', 'SetzeGift', 'SchrittZahl', 'TickZahl', 'Distanz', 'Bau', 'Position', 'DreheWegVonObjekt', 'DreheZuObjekt', 'Ged채chtnis', 'SendeNachricht', 'Zufallsname', 'consolebku', 'Aktiv', 'InTeam', 'SetzeLimit', 'Zufall', 'GeheZuBauDirekt', 'GeheZuZielDirekt', 'Object', 'alert', 'F체hreAlteBefehleAus', 'Richtung', 'HatZucker', 'HatApfel']
              var consolebku = {log:console.log}
        
              eval('(function(' +  Object.keys(window).filter(function(x){return whitelist.indexOf(x)< 0}).join(",") + '){var console = consolebku;' + atob("<%-exportCode%>") + '})();');
            <% }
          }) %>
          }
        <% } %>
    
      document.getElementById("intro-text").innerHTML = "Dateien werden geladen ...";

      <% if (!atLeastOnFile) { %>
        document.getElementById('intro-text').innerHTML = "Keine Ameise geladen!"
        throw "Keine Ameise geladen!"
      <% } %>
      
      <% if (use3d) { %>
        var levels = [<%-code.map(function(a){return a.level}).join(',')%>]
        var colors = <%-JSON.stringify(colors)%>
        AntIT.SetzeSeed("<%-seed%>")
        injectCode()
        AntIT.StarteSimulation("<%-hash%>", "<%=prefix%>", null, levels, colors)
      <% } else { %>
        function start(){
          if (counter <= <%=repeat%>) {
            var hud = "hud" + counter
            document.getElementById("batchstat").innerHTML = counter + " von <%=repeat%>"
            counter++
            var autoscroll = false
            if ((window.innerHeight + window.pageYOffset) >= document.body.offsetHeight - 30) {
                autoscroll = true
            }
            var levels = [<%-code.map(function(a){return a.level}).join(',')%>]
            var colors = <%-JSON.stringify(colors)%>
            AntIT.SetzeSeed("<%-seed%>")
            injectCode()
            AntIT.StarteSimulation("<%-hash%>", "<%=prefix%>", hud, levels, colors)
            if (autoscroll) window.scrollTo(0,document.body.scrollHeight);
          }
        }
        var counter = 1
        var stats = []
        View.Pulse.getBus().on('submit', function(){
            var points = View.Sim.getPoints().split(',')
            if (stats.length == 0)
              stats = points
            else {
              for (var i = 0; i < points.length; i++) {
                stats[i] = parseInt(stats[i]) + parseInt(points[i])
              }
            }
            document.getElementById("stats").innerHTML = stats.map(function(p){
              return "durchschnittlich " + Math.round(p/(counter-1)) + " Punkte"
            }).join('<br>')
            setTimeout(start,0)
        })
        start()
      <% } %>

      </script>
  </body>
</html>

