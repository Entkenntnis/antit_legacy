<!DOCTYPE html>
<html lang="de">
  <head>
    <% include ../include/commonHead %>
    <link rel='stylesheet' href='//cdn.jsdelivr.net/npm/hack-font@3.3.0/build/web/hack.css'>
  </head>
  <body>
    <div class="container-fluid">

      <div class="jumbotron">
        <h1>Ameisen-Editor</h1>
      </div>
      
      <br>
      
      <% if (message.length > 0) { %>
        <div class="alert alert-dismissible alert-success">
          <button type="button" class="close" data-dismiss="alert">&times;</button>
          <%=message%>
        </div>
      <% } %>
      
      <form method="POST" action="save?id=<%=id%>" id="editform">
        <input type="hidden" name="_csrf" value="<%=csrf%>"/>
        <input type="hidden" name="antid" value="<%=id%>"/> 
        <input type="submit" value="Speichern" class="btn btn-outline-success btn-sm">
        <script>
          function myclose() {
            if (editor.getValue() == originalCode || confirm("Schließen ohne zu speichern? Änderungen werden verworfen.")) {
              window.location.href = ''
            }
          }
        </script>
        <button type="button" class="btn btn-outline-warning btn-sm" onclick="mysaveandclose()">Speichern &amp; Schließen</button>
        <script>
          function mysaveandclose() {
            var form = document.getElementById('editform')
            form.action += '&close=1'
            form.submit()
          }
        </script>
        <button type="button" class="btn btn-outline-danger btn-sm" onclick="myclose()">Schließen</button>
        <% if (user.level >= 4) { %>
          <script src="js/jshint.min.js"></script>
          <script>
            function checkSyntax() {
              var result = JSHINT(editor.getValue(), {asi:true, esversion:6})
              var output = result ? "Syntax ist in Ordnung." : JSHINT.errors.map(function(err){
                return "Fehler in Zeile " + err.line + ": " + err.reason
              }).join('<br>')
              document.getElementById('errors').innerHTML = output
            }
          </script>
          <button onclick="checkSyntax()" style="margin-left:60px" class="btn btn-outline-info btn-sm" type="button">Syntax überprüfen</button>
          <br><br><div id="errors"></div>
        <% } else { %>
          <br><br>
        <% } %>
      <hr>
      <textarea rows="50" id="editor" name="data"><%-data;%></textarea>
      <hr>
      </form>
      <link rel="stylesheet" href="css/codemirror.css">
      <link rel="stylesheet" href="css/show-hint.css">
      <script src="js/codemirror.js"></script>
      <style>
        .CodeMirror {
          font-family:Hack, monospace;
        }
      </style>
      
      
      <script>
      
        function startsWith(str, searchString, position){
            position = position || 0;
            return str.substr(position, searchString.length) === searchString;
        }

        var editor = CodeMirror.fromTextArea(
          document.getElementById("editor"),
            {
              mode: {name:"javascript",globalVars:true},
              lineNumbers:true,
              smartIndent:true,
              indentUnit:4,
              matchBrackets:true,
              autoCloseBrackets:true,
              extraKeys:{"Ctrl-S":function(){
                document.getElementById('editform').submit()
              }},
        })
      
        var originalCode = editor.getValue()
          
        CodeMirror.keyMap.default["Shift-Tab"] = "indentLess"
        CodeMirror.keyMap.default["Tab"] = "indentMore"
      
        var x = function(cm) {
          var cur = cm.getCursor();
          var token = cm.getTokenAt(cur);
          var vars = [
          
          // Level 1
              "Gehe"
            , "Drehe"
            , "DreheZuRichtung"
            
          // Level 2
            
            <% if (user.level >= 2) { %>
            
            , "GeheZuBau"
            , "NimmZucker"
            , "LadeZuckerAb"
            , "TrageApfel"
            , "InTeam"
            
            <% } %>
            
          // Level 3
            
            <% if (user.level >= 3) { %>
            
            , "GeheZuZiel"
            , "GeheZuZielDirekt"
            , "GeheZuBauDirekt"
            
            <% } %>
            
          // Level 4
            
            <% if (user.level >= 4) { %>
            
            , "SetzeGift"
            , "Zufall"
            , "FühreAlteBefehleAus"
            , "Warte"
            
            <% } %>
            
          // Level 5
            
            <% if (user.level >= 5) { %>
            
            , "TickZahl"
            , "SchrittZahl"
            , "SendeNachricht"
            , "SetzeLimit"
            , "DreheWegVonObjekt"
            , "DreheZuObjekt"
            
            <% } %>
            
            
          // Level 9
            
            <% if (user.level >= 6 ) { %>
            
            , "Gedächtnis"
            , "Position"
            // , "SendeSelber"
            // , "Zufallszahl"
            , "Zufallsname"
            , "Blickrichtung"
            , "Distanz"
            , "Richtung"
            , "Bau"
            , "HatZucker"
            , "HatApfel"
            //, "Stopp"
            //, "FühreAus"
            // "AktuelleLast"
            //, "TrägtApfel"
            //, "AktuellesZiel"
            //, "Umgebung"
            //, "Untätig"
            //, "IstOffen"
            //, "function"
            , "console.log"
            //, "undefined"
            //, "delete"
            
            <% } %>
          ];
          var completions = []
          if (token.type == "variable") {
            vars.forEach(function(f) {
              if (startsWith(f, token.string))
              completions.push(f)
            })
          }
          return {list: completions,
            from: CodeMirror.Pos(cur.line, token.start),
            to: CodeMirror.Pos(cur.line, token.end)}
        }
      
        editor.on("inputRead", function(cm) {
          var filter = new RegExp('[\.a-zA-ZäüöÄÜÖß]','i');
            if(cm.display.input.textarea.value.slice(-1).match(filter)){
              CodeMirror.showHint(cm, x, {completeSingle:false})
          }
        })
      
        function append(){
          editor.replaceRange('\n\nAmeise.wenn("", function(){\n    \n})', CodeMirror.Pos(editor.lastLine()))
        }

      </script>
    
      <% if (user.level >= 3) { %>
        <button onclick="append()" class="btn btn-outline-primary btn-sm">Ereignis hinzufügen</button>
      <% } %>

      <div style="height:300px"></div>
  
    </div>
  </body>
</html>
